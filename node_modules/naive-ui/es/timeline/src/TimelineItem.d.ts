import { PropType } from 'vue';
import type { ExtractPublicPropTypes } from '../../_utils';
declare const timelineItemProps: {
    time: PropType<string | number>;
    title: StringConstructor;
    content: StringConstructor;
    color: StringConstructor;
    type: {
        type: PropType<"default" | "success" | "error" | "warning" | "info">;
        default: string;
    };
};
export declare type TimelineItemProps = ExtractPublicPropTypes<typeof timelineItemProps>;
declare const _default: import("vue").DefineComponent<{
    time: PropType<string | number>;
    title: StringConstructor;
    content: StringConstructor;
    color: StringConstructor;
    type: {
        type: PropType<"default" | "success" | "error" | "warning" | "info">;
        default: string;
    };
}, {
    mergedClsPrefix: import("vue").Ref<string>;
    cssVars: import("vue").ComputedRef<{
        '--n-bezier': string;
        '--n-circle-border': string;
        '--n-icon-color': string;
        '--n-content-font-size': string;
        '--n-content-text-color': string;
        '--n-line-color': string;
        '--n-meta-text-color': string;
        '--n-title-font-size': string;
        '--n-title-font-weight': string;
        '--n-title-margin': string | number;
        '--n-title-text-color': string;
        '--n-icon-size': string;
    }>;
}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, Record<string, any>, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    time: PropType<string | number>;
    title: StringConstructor;
    content: StringConstructor;
    color: StringConstructor;
    type: {
        type: PropType<"default" | "success" | "error" | "warning" | "info">;
        default: string;
    };
}>>, {
    type: "default" | "success" | "error" | "warning" | "info";
}>;
export default _default;
