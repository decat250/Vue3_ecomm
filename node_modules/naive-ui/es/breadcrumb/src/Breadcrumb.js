import { h, computed, defineComponent, provide, toRef } from 'vue';
import { useConfig, useTheme } from '../../_mixins';
import { breadcrumbLight } from '../styles';
import style from './styles/index.cssr';
import { createInjectionKey } from '../../_utils';
export const breadcrumbInjectionKey = createInjectionKey('n-breadcrumb');
const breadcrumbProps = Object.assign(Object.assign({}, useTheme.props), { separator: {
        type: String,
        default: '/'
    } });
export default defineComponent({
    name: 'Breadcrumb',
    props: breadcrumbProps,
    setup(props) {
        const { mergedClsPrefixRef } = useConfig(props);
        const themeRef = useTheme('Breadcrumb', '-breadcrumb', style, breadcrumbLight, props, mergedClsPrefixRef);
        provide(breadcrumbInjectionKey, {
            separatorRef: toRef(props, 'separator'),
            mergedClsPrefixRef
        });
        return {
            mergedClsPrefix: mergedClsPrefixRef,
            cssVars: computed(() => {
                const { common: { cubicBezierEaseInOut }, self: { separatorColor, itemTextColor, itemTextColorHover, itemTextColorPressed, itemTextColorActive, fontSize, fontWeightActive } } = themeRef.value;
                return {
                    '--n-font-size': fontSize,
                    '--n-bezier': cubicBezierEaseInOut,
                    '--n-item-text-color': itemTextColor,
                    '--n-item-text-color-hover': itemTextColorHover,
                    '--n-item-text-color-pressed': itemTextColorPressed,
                    '--n-item-text-color-active': itemTextColorActive,
                    '--n-separator-color': separatorColor,
                    '--n-font-weight-active': fontWeightActive
                };
            })
        };
    },
    render() {
        return (h("nav", { class: `${this.mergedClsPrefix}-breadcrumb`, style: this.cssVars, "aria-label": "Breadcrumb" },
            h("ul", null, this.$slots)));
    }
});
