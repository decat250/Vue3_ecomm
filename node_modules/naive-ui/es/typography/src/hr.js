import { h, defineComponent, computed } from 'vue';
import { useConfig, useTheme } from '../../_mixins';
import { typographyLight } from '../styles';
import style from './styles/hr.cssr';
export default defineComponent({
    name: 'Hr',
    props: Object.assign({}, useTheme.props),
    setup(props) {
        const { mergedClsPrefixRef } = useConfig(props);
        const themeRef = useTheme('Typography', '-hr', style, typographyLight, props, mergedClsPrefixRef);
        return {
            mergedClsPrefix: mergedClsPrefixRef,
            cssVars: computed(() => {
                const { common: { cubicBezierEaseInOut }, self: { hrColor } } = themeRef.value;
                return {
                    '--n-bezier': cubicBezierEaseInOut,
                    '--n-color': hrColor
                };
            })
        };
    },
    render() {
        return (h("hr", { class: `${this.mergedClsPrefix}-hr`, style: this.cssVars }));
    }
});
