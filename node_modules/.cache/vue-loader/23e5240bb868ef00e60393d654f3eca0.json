{"remainingRequest":"/Users/decat/Vue3_ecomm/node_modules/vue-loader-v16/dist/index.js??ref--1-1!/Users/decat/Vue3_ecomm/src/views/adm/product.vue?vue&type=style&index=0&id=2f664360&lang=css","dependencies":[{"path":"/Users/decat/Vue3_ecomm/src/views/adm/product.vue","mtime":1645372316761},{"path":"/Users/decat/Vue3_ecomm/node_modules/css-loader/dist/cjs.js","mtime":1644997287420},{"path":"/Users/decat/Vue3_ecomm/node_modules/vue-loader-v16/dist/stylePostLoader.js","mtime":1644997290174},{"path":"/Users/decat/Vue3_ecomm/node_modules/postcss-loader/src/index.js","mtime":1644997289386},{"path":"/Users/decat/Vue3_ecomm/node_modules/cache-loader/dist/cjs.js","mtime":1644997287108},{"path":"/Users/decat/Vue3_ecomm/node_modules/vue-loader-v16/dist/index.js","mtime":1644997290172}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci50ZXN0aW1vbmlhbC1ncm91cCA+IC5yb3cgewogIGRpc3BsYXk6IGJsb2NrOwogIG92ZXJmbG93LXg6IGF1dG87CiAgd2hpdGUtc3BhY2U6IG5vd3JhcDsKfQoudGVzdGltb25pYWwtZ3JvdXAgPiAucm93ID4gLmNvbC00IHsKICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7Cn0K"},{"version":3,"sources":["/Users/decat/Vue3_ecomm/src/views/adm/product.vue"],"names":[],"mappings":";AAsGA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE;EACxB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;EACd,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;EAChB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrB;AACA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;EACjC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvB","file":"/Users/decat/Vue3_ecomm/src/views/adm/product.vue","sourceRoot":"","sourcesContent":["<template>\n  商品管理\n  <n-button type=\"primary\" @click=\"showModal = true\"> 新增商品 </n-button>\n\n  <n-data-table\n    :columns=\"columns\"\n    :data=\"productlist\"\n    :pagination=\"pagination\"\n    :bordered=\"false\"\n  />\n\n  <n-modal v-model:show=\"showModal\">\n    <n-card\n      style=\"width: 600px\"\n      title=\"Modal\"\n      :bordered=\"false\"\n      size=\"huge\"\n      role=\"dialog\"\n      aria-modal=\"true\"\n    >\n      <n-form :model=\"model\" ref=\"formRef\" :rules=\"rules\">\n        <n-form-item path=\"product_name\" label=\"商品名稱\">\n          <n-input\n            placeholder=\"請輸入商品名稱\"\n            clearable\n            v-model:value=\"model.password\"\n            type=\"\"\n          />\n        </n-form-item>\n        {{ fileList }}\n        <div class=\"row\">\n          <n-form-item class=\"col-6\" path=\"product_price\" label=\"價格\">\n            <n-input-number\n              v-model:value=\"model.price\"\n              placeholder=\"請輸入商品價格\"\n              clearable\n            />\n          </n-form-item>\n\n          <n-form-item class=\"col-6\" path=\"product_count\" label=\"數量\">\n            <n-input-number\n              placeholder=\"請輸入商品數量\"\n              v-model:value=\"model.count\"\n              clearable\n            />\n          </n-form-item>\n        </div>\n        <hr />\n\n        <input\n          type=\"file\"\n          accept=\"image/*\"\n          multiple\n          @change=\"previewMultiImage\"\n          class=\"form-control-file\"\n          id=\"my-file\"\n          ref=\"fileInput\"\n        />\n        <div class=\"container testimonial-group\" style=\"margin-top: 10px\">\n          <div class=\"row text-center\">\n            <div\n              class=\"col-4\"\n              v-for=\"(item, index) in preview_list\"\n              :key=\"index\"\n            >\n              <img\n                :src=\"item\"\n                class=\"img-fluid\"\n                v-on:click=\"clicking($event)\"\n                ref=\"referenceMe\"\n                style=\"max-width: 100px\"\n              />\n              <p class=\"mb-0\">file name: {{ image_list[index].name }}</p>\n              <n-button type=\"error\" v-on:click=\"deleteimg(index)\">\n                刪除\n              </n-button>\n            </div>\n          </div>\n        </div>\n\n        <hr />\n        商品描述\n        <vue-editor v-model=\"content\" />\n        {{ content }}\n\n        <n-button type=\"primary\" @click=\"newproduct()\" block secondary strong\n          >新增商品\n        </n-button>\n\n        <n-modal\n          v-model:show=\"showpicModal\"\n          preset=\"card\"\n          style=\"width: 600px\"\n          title=\"\"\n        >\n          <img :src=\"previewImageUrl\" style=\"width: 100%\" />\n        </n-modal>\n      </n-form>\n    </n-card>\n  </n-modal>\n</template>\n<style>\n.testimonial-group > .row {\n  display: block;\n  overflow-x: auto;\n  white-space: nowrap;\n}\n.testimonial-group > .row > .col-4 {\n  display: inline-block;\n}\n</style>\n<script>\nimport { h, defineComponent, ref } from \"vue\";\nimport { NButton, useMessage } from \"naive-ui\";\nimport { VueEditor } from \"vue3-editor\";\n//import axios from \"axios\";\nconst createColumns = ({ play }) => {\n  return [\n    {\n      title: \"代號\",\n      key: \"product_id\",\n    },\n    {\n      title: \"商品名稱\",\n      key: \"product_name\",\n    },\n    {\n      title: \"數量\",\n      key: \"product_count\",\n    },\n    {\n      title: \"價格\",\n      key: \"product_price\",\n    },\n    {\n      title: \"操作\",\n      key: \"actions\",\n      render(row) {\n        return h(\n          NButton,\n          {\n            strong: true,\n            type: \"primary\",\n            tertiary: true,\n            size: \"small\",\n            onClick: () => play(row),\n          },\n          { default: () => \"Play\" }\n        );\n      },\n    },\n  ];\n};\n\nexport default defineComponent({\n  components: { VueEditor },\n\n  setup() {\n    const message = useMessage();\n    const formRef = ref(null);\n    const rPasswordFormItemRef = ref(null);\n    const modelRef = ref({});\n\n    return {\n      showModal: ref(false),\n      columns: createColumns({\n        play(row) {\n          this.showModal = true;\n          message.info(`Play ${row.product_id}`);\n        },\n      }),\n      pagination: { pageSize: 10 },\n      formRef,\n      rPasswordFormItemRef,\n      model: modelRef,\n      rules: {},\n    };\n  },\n  data() {\n    return {\n      content: \"<h1>Some initial content</h1>\",\n      productlist: [],\n      preview: \"\",\n      image_list: [],\n      preview_list: [],\n      imagesArray: null,\n    };\n  },\n  mounted() {\n    fetch(\"http://127.0.0.1/api/getproductlist\", {\n      method: \"get\",\n    })\n      .then((data) => {\n        return data.json();\n      })\n      .then((ret) => {\n        this.productlist = ret.productlist;\n      });\n  },\n  methods: {\n    deleteimg(index) {\n      /*\n      var arr = [\"shift\", \"splice\", \"filter\", \"pop\"];\n\n      var spliced = arr.splice(2, 1);\n      \n\n      console.log(arr)\n      console.log(spliced)\n      */\n      console.log(this.imagesArray);\n      console.log(index);\n\n      \n    },\n    previewMultiImage: function (event) {\n      this.imagesArray = event.target.files;\n\n      var input = event.target;\n      var count = input.files.length;\n      var index = 0;\n\n      if (input.files) {\n        while (count--) {\n          var reader = new FileReader();\n          reader.onload = (e) => {\n            this.preview_list.push(e.target.result);\n          };\n          this.image_list.push(input.files[index]);\n          reader.readAsDataURL(input.files[index]);\n          index++;\n        }\n      }\n    },\n    newproduct() {\n      const formData = new FormData();\n      for (const i of Object.keys(this.imagesArray)) {\n        formData.append(\"file[]\", this.imagesArray[i]);\n      }\n      /*\n      axios\n        .post(\"http://localhost/api/upload_file\", formData, {})\n        .then((res) => {\n          console.log(res);\n        });\n\n    \n      /*\n      fetch(\"http://localhost/api/upload_file\", {\n        method: \"post\",\n        body: data,\n        headers: {\n          \"Content-Type\": \"multipart/form-data\",\n        },\n      });\n     */\n      fetch(\"http://localhost/api/upload_file\", {\n        method: \"POST\",\n        body: formData,\n      })\n        .then((data) => {\n          return data.json();\n        })\n        .then((ret) => {\n          console.log(ret);\n        });\n    },\n  },\n});\n</script>"]}]}