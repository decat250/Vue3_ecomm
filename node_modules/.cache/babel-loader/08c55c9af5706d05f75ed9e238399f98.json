{"remainingRequest":"/Users/decat/Vue3_ecomm/node_modules/babel-loader/lib/index.js!/Users/decat/Vue3_ecomm/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/decat/Vue3_ecomm/node_modules/vue-loader-v16/dist/index.js??ref--1-1!/Users/decat/Vue3_ecomm/src/views/Test.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/decat/Vue3_ecomm/src/views/Test.vue","mtime":1645699142687},{"path":"/Users/decat/Vue3_ecomm/babel.config.js","mtime":1645696101737},{"path":"/Users/decat/Vue3_ecomm/node_modules/cache-loader/dist/cjs.js","mtime":1645696104150},{"path":"/Users/decat/Vue3_ecomm/node_modules/babel-loader/lib/index.js","mtime":1645696104065},{"path":"/Users/decat/Vue3_ecomm/node_modules/cache-loader/dist/cjs.js","mtime":1645696104150},{"path":"/Users/decat/Vue3_ecomm/node_modules/vue-loader-v16/dist/index.js","mtime":1645696107319}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuc29ydC5qcyI7CmltcG9ydCB7IGRlZmluZUNvbXBvbmVudCwgcmVhY3RpdmUgfSBmcm9tICJ2dWUiOwppbXBvcnQgeyBUYWJsZUxpdGUsIFRlc3QgfSBmcm9tICJ2dWUzLXRhYmxlLWxpdGUiOyAvLyBGYWtlIERhdGEgZm9yICdhc2MnIHNvcnRhYmxlCgp2YXIgc2FtcGxlRGF0YTEgPSBmdW5jdGlvbiBzYW1wbGVEYXRhMShvZmZzdCwgbGltaXQpIHsKICBvZmZzdCA9IG9mZnN0ICsgMTsKICB2YXIgZGF0YSA9IFtdOwoKICBmb3IgKHZhciBpID0gb2Zmc3Q7IGkgPD0gbGltaXQ7IGkrKykgewogICAgZGF0YS5wdXNoKHsKICAgICAgaWQ6IGksCiAgICAgIG5hbWU6ICJURVNUIiArIGksCiAgICAgIGVtYWlsOiAidGVzdCIgKyBpICsgIkBleGFtcGxlLmNvbSIKICAgIH0pOwogIH0KCiAgcmV0dXJuIGRhdGE7Cn07IC8vIEZha2UgRGF0YSBmb3IgJ2Rlc2MnIHNvcnRhYmxlCgoKdmFyIHNhbXBsZURhdGEyID0gZnVuY3Rpb24gc2FtcGxlRGF0YTIob2Zmc3QsIGxpbWl0KSB7CiAgdmFyIGRhdGEgPSBbXTsKCiAgZm9yICh2YXIgaSA9IGxpbWl0OyBpID4gb2Zmc3Q7IGktLSkgewogICAgZGF0YS5wdXNoKHsKICAgICAgaWQ6IGksCiAgICAgIG5hbWU6ICJURVNUIiArIGksCiAgICAgIGVtYWlsOiAidGVzdCIgKyBpICsgIkBleGFtcGxlLmNvbSIKICAgIH0pOwogIH0KCiAgcmV0dXJuIGRhdGE7Cn07CgpleHBvcnQgZGVmYXVsdCBkZWZpbmVDb21wb25lbnQoewogIG5hbWU6ICJBcHAiLAogIGNvbXBvbmVudHM6IHsKICAgIFRhYmxlTGl0ZTogVGFibGVMaXRlLAogICAgVGVzdDogVGVzdAogIH0sCiAgc2V0dXA6IGZ1bmN0aW9uIHNldHVwKCkgewogICAgLy8gVGFibGUgY29uZmlnCiAgICB2YXIgdGFibGUgPSByZWFjdGl2ZSh7CiAgICAgIGlzTG9hZGluZzogZmFsc2UsCiAgICAgIGNvbHVtbnM6IFt7CiAgICAgICAgbGFiZWw6ICJJRCIsCiAgICAgICAgZmllbGQ6ICJpZCIsCiAgICAgICAgd2lkdGg6ICIzJSIsCiAgICAgICAgc29ydGFibGU6IHRydWUsCiAgICAgICAgaXNLZXk6IHRydWUKICAgICAgfSwgewogICAgICAgIGxhYmVsOiAiTmFtZSIsCiAgICAgICAgZmllbGQ6ICJuYW1lIiwKICAgICAgICB3aWR0aDogIjEwJSIsCiAgICAgICAgc29ydGFibGU6IHRydWUKICAgICAgfSwgewogICAgICAgIGxhYmVsOiAiRW1haWwiLAogICAgICAgIGZpZWxkOiAiZW1haWwiLAogICAgICAgIHdpZHRoOiAiMTUlIiwKICAgICAgICBzb3J0YWJsZTogdHJ1ZQogICAgICB9XSwKICAgICAgcm93czogW10sCiAgICAgIHRvdGFsUmVjb3JkQ291bnQ6IDAsCiAgICAgIHNvcnRhYmxlOiB7CiAgICAgICAgb3JkZXI6ICJpZCIsCiAgICAgICAgc29ydDogImFzYyIKICAgICAgfQogICAgfSk7CiAgICAvKioKICAgICAqIFNlYXJjaCBFdmVudAogICAgICovCgogICAgdmFyIGRvU2VhcmNoID0gZnVuY3Rpb24gZG9TZWFyY2gob2Zmc2V0LCBsaW1pdCwgb3JkZXIsIHNvcnQpIHsKICAgICAgdGFibGUuaXNMb2FkaW5nID0gdHJ1ZTsKICAgICAgc2V0VGltZW91dChmdW5jdGlvbiAoKSB7CiAgICAgICAgdGFibGUuaXNSZVNlYXJjaCA9IG9mZnNldCA9PSB1bmRlZmluZWQgPyB0cnVlIDogZmFsc2U7CgogICAgICAgIGlmIChvZmZzZXQgPj0gMTAgfHwgbGltaXQgPj0gMjApIHsKICAgICAgICAgIGxpbWl0ID0gMjA7CiAgICAgICAgfQoKICAgICAgICBpZiAoc29ydCA9PSAiYXNjIikgewogICAgICAgICAgdGFibGUucm93cyA9IHNhbXBsZURhdGExKG9mZnNldCwgbGltaXQpOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICB0YWJsZS5yb3dzID0gc2FtcGxlRGF0YTIob2Zmc2V0LCBsaW1pdCk7CiAgICAgICAgfQoKICAgICAgICB0YWJsZS50b3RhbFJlY29yZENvdW50ID0gMjA7CiAgICAgICAgdGFibGUuc29ydGFibGUub3JkZXIgPSBvcmRlcjsKICAgICAgICB0YWJsZS5zb3J0YWJsZS5zb3J0ID0gc29ydDsKICAgICAgfSwgNjAwKTsKICAgIH07IC8vIEZpcnN0IGdldCBkYXRhCgoKICAgIGRvU2VhcmNoKDAsIDEwLCAiaWQiLCAiYXNjIik7CiAgICByZXR1cm4gewogICAgICB0YWJsZTogdGFibGUsCiAgICAgIGRvU2VhcmNoOiBkb1NlYXJjaAogICAgfTsKICB9Cn0pOw=="},{"version":3,"mappings":"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","names":["defineComponent","reactive","TableLite","Test","sampleData1","offst","limit","data","i","push","id","name","email","sampleData2","components","setup","table","isLoading","columns","label","field","width","sortable","isKey","rows","totalRecordCount","order","sort","doSearch","offset","setTimeout","isReSearch","undefined"],"sourceRoot":"","sources":["/Users/decat/Vue3_ecomm/src/views/Test.vue"],"sourcesContent":["<template>\n  <table-lite\n    :is-slot-mode=\"true\"\n    :is-loading=\"table.isLoading\"\n    :columns=\"table.columns\"\n    :rows=\"table.rows\"\n    :total=\"table.totalRecordCount\"\n    :sortable=\"table.sortable\"\n    @do-search=\"doSearch\"\n    @is-finished=\"table.isLoading = false\"\n  >\n    <template v-slot:name=\"data\">\n      <Test>\n        {{ data.value.name }}\n      </Test>\n    </template>\n  </table-lite>\n</template>\n\n<script>\nimport { defineComponent, reactive } from \"vue\";\nimport {TableLite,Test} from \"vue3-table-lite\"\n// Fake Data for 'asc' sortable\nconst sampleData1 = (offst, limit) => {\n  offst = offst + 1;\n  let data = [];\n  for (let i = offst; i <= limit; i++) {\n    data.push({\n      id: i,\n      name: \"TEST\" + i,\n      email: \"test\" + i + \"@example.com\",\n    });\n  }\n  return data;\n};\n// Fake Data for 'desc' sortable\nconst sampleData2 = (offst, limit) => {\n  let data = [];\n  for (let i = limit; i > offst; i--) {\n    data.push({\n      id: i,\n      name: \"TEST\" + i,\n      email: \"test\" + i + \"@example.com\",\n    });\n  }\n  return data;\n};\nexport default defineComponent({\n  name: \"App\",\n  components: { TableLite, Test },\n  setup() {\n    // Table config\n    const table = reactive({\n      isLoading: false,\n      columns: [\n        {\n          label: \"ID\",\n          field: \"id\",\n          width: \"3%\",\n          sortable: true,\n          isKey: true,\n        },\n        {\n          label: \"Name\",\n          field: \"name\",\n          width: \"10%\",\n          sortable: true,\n        },\n        {\n          label: \"Email\",\n          field: \"email\",\n          width: \"15%\",\n          sortable: true,\n        },\n      ],\n      rows: [],\n      totalRecordCount: 0,\n      sortable: {\n        order: \"id\",\n        sort: \"asc\",\n      },\n    });\n    /**\n     * Search Event\n     */\n    const doSearch = (offset, limit, order, sort) => {\n      table.isLoading = true;\n      setTimeout(() => {\n        table.isReSearch = offset == undefined ? true : false;\n        if (offset >= 10 || limit >= 20) {\n          limit = 20;\n        }\n        if (sort == \"asc\") {\n          table.rows = sampleData1(offset, limit);\n        } else {\n          table.rows = sampleData2(offset, limit);\n        }\n        table.totalRecordCount = 20;\n        table.sortable.order = order;\n        table.sortable.sort = sort;\n      }, 600);\n    };\n    // First get data\n    doSearch(0, 10, \"id\", \"asc\");\n    return {\n      table,\n      doSearch,\n    };\n  },\n});\n</script>"]}]}