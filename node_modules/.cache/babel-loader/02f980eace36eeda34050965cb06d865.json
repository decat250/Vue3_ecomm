{"remainingRequest":"/Users/decat/Vue3_ecomm/node_modules/babel-loader/lib/index.js!/Users/decat/Vue3_ecomm/node_modules/vue-loader-v16/dist/templateLoader.js??ref--6!/Users/decat/Vue3_ecomm/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/decat/Vue3_ecomm/node_modules/vue-loader-v16/dist/index.js??ref--1-1!/Users/decat/Vue3_ecomm/src/views/Test.vue?vue&type=template&id=5b2d5ecc","dependencies":[{"path":"/Users/decat/Vue3_ecomm/src/views/Test.vue","mtime":1645698724432},{"path":"/Users/decat/Vue3_ecomm/babel.config.js","mtime":1645696101737},{"path":"/Users/decat/Vue3_ecomm/node_modules/cache-loader/dist/cjs.js","mtime":1645696104150},{"path":"/Users/decat/Vue3_ecomm/node_modules/babel-loader/lib/index.js","mtime":1645696104065},{"path":"/Users/decat/Vue3_ecomm/node_modules/vue-loader-v16/dist/templateLoader.js","mtime":1645696107320},{"path":"/Users/decat/Vue3_ecomm/node_modules/cache-loader/dist/cjs.js","mtime":1645696104150},{"path":"/Users/decat/Vue3_ecomm/node_modules/vue-loader-v16/dist/index.js","mtime":1645696107319}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgcmVzb2x2ZUNvbXBvbmVudCBhcyBfcmVzb2x2ZUNvbXBvbmVudCwgb3BlbkJsb2NrIGFzIF9vcGVuQmxvY2ssIGNyZWF0ZUJsb2NrIGFzIF9jcmVhdGVCbG9jayB9IGZyb20gInZ1ZSI7CmV4cG9ydCBmdW5jdGlvbiByZW5kZXIoX2N0eCwgX2NhY2hlLCAkcHJvcHMsICRzZXR1cCwgJGRhdGEsICRvcHRpb25zKSB7CiAgdmFyIF9jb21wb25lbnRfdGFibGVfbGl0ZSA9IF9yZXNvbHZlQ29tcG9uZW50KCJ0YWJsZS1saXRlIik7CgogIHJldHVybiBfb3BlbkJsb2NrKCksIF9jcmVhdGVCbG9jayhfY29tcG9uZW50X3RhYmxlX2xpdGUsIHsKICAgICJoYXMtY2hlY2tib3giOiB0cnVlLAogICAgImlzLWxvYWRpbmciOiBfY3R4LnRhYmxlLmlzTG9hZGluZywKICAgICJpcy1yZS1zZWFyY2giOiBfY3R4LnRhYmxlLmlzUmVTZWFyY2gsCiAgICBjb2x1bW5zOiBfY3R4LnRhYmxlLmNvbHVtbnMsCiAgICByb3dzOiBfY3R4LnRhYmxlLnJvd3MsCiAgICB0b3RhbDogX2N0eC50YWJsZS50b3RhbFJlY29yZENvdW50LAogICAgc29ydGFibGU6IF9jdHgudGFibGUuc29ydGFibGUsCiAgICBtZXNzYWdlczogX2N0eC50YWJsZS5tZXNzYWdlcywKICAgIG9uRG9TZWFyY2g6IF9jdHguZG9TZWFyY2gsCiAgICBvbklzRmluaXNoZWQ6IF9jdHgudGFibGVMb2FkaW5nRmluaXNoLAogICAgb25SZXR1cm5DaGVja2VkUm93czogX2N0eC51cGRhdGVDaGVja2VkUm93cwogIH0sIG51bGwsIDgKICAvKiBQUk9QUyAqLwogICwgWyJpcy1sb2FkaW5nIiwgImlzLXJlLXNlYXJjaCIsICJjb2x1bW5zIiwgInJvd3MiLCAidG90YWwiLCAic29ydGFibGUiLCAibWVzc2FnZXMiLCAib25Eb1NlYXJjaCIsICJvbklzRmluaXNoZWQiLCAib25SZXR1cm5DaGVja2VkUm93cyJdKTsKfQ=="},{"version":3,"mappings":";;;;uBACEA,aAYcC,qBAZd,EAYc;AAXX,oBAAc,IAWH;AAVX,kBAAYC,WAAMC,SAUP;AATX,oBAAcD,WAAME,UAST;AARXC,WAAO,EAAEH,WAAMG,OAQJ;AAPXC,QAAI,EAAEJ,WAAMI,IAOD;AANXC,SAAK,EAAEL,WAAMM,gBAMF;AALXC,YAAQ,EAAEP,WAAMO,QAKL;AAJXC,YAAQ,EAAER,WAAMQ,QAIL;AAHXC,cAAS,EAAET,aAGA;AAFXU,gBAAW,EAAEV,uBAEF;AADXW,uBAAmB,EAAEX;AACV,GAZd;;AAAA","names":["_createBlock","_component_table_lite","_ctx","isLoading","isReSearch","columns","rows","total","totalRecordCount","sortable","messages","onDoSearch","onIsFinished","onReturnCheckedRows"],"sourceRoot":"","sources":["/Users/decat/Vue3_ecomm/src/views/Test.vue"],"sourcesContent":["<template>\n  <table-lite\n    :has-checkbox=\"true\"\n    :is-loading=\"table.isLoading\"\n    :is-re-search=\"table.isReSearch\"\n    :columns=\"table.columns\"\n    :rows=\"table.rows\"\n    :total=\"table.totalRecordCount\"\n    :sortable=\"table.sortable\"\n    :messages=\"table.messages\"\n    @do-search=\"doSearch\"\n    @is-finished=\"tableLoadingFinish\"\n    @return-checked-rows=\"updateCheckedRows\"\n  ></table-lite>\n</template>\n\n<script>\nimport { defineComponent, reactive } from \"vue\";\nimport TableLite from \"../components/TableLite.vue\";\n// Fake Data for 'asc' sortable\nconst sampleData1 = (offst, limit) => {\n  offst = offst + 1;\n  let data = [];\n  for (let i = offst; i <= limit; i++) {\n    data.push({\n      id: i,\n      name: \"TEST\" + i,\n      email: \"test\" + i + \"@example.com\",\n    });\n  }\n  return data;\n};\n// Fake Data for 'desc' sortable\nconst sampleData2 = (offst, limit) => {\n  let data = [];\n  for (let i = limit; i > offst; i--) {\n    data.push({\n      id: i,\n      name: \"TEST\" + i,\n      email: \"test\" + i + \"@example.com\",\n    });\n  }\n  return data;\n};\nexport default defineComponent({\n  name: \"App\",\n  components: { TableLite },\n  setup() {\n    // Table config\n    const table = reactive({\n      isLoading: false,\n      isReSearch: false,\n      columns: [\n        {\n          label: \"ID\",\n          field: \"id\",\n          width: \"3%\",\n          sortable: true,\n          isKey: true,\n        },\n        {\n          label: \"Name\",\n          field: \"name\",\n          width: \"10%\",\n          sortable: true,\n          display: function (row) {\n            return (\n              '<a href=\"javascript:void(0)\" data-id=\"' +\n              row.id +\n              '\" class=\"is-rows-el name-btn\">' +\n              row.name +\n              \"</a>\"\n            );\n          },\n        },\n        {\n          label: \"Email\",\n          field: \"email\",\n          width: \"15%\",\n          sortable: true,\n        },\n        {\n          label: \"\",\n          field: \"quick\",\n          width: \"10%\",\n          display: function (row) {\n            return (\n              '<button type=\"button\" data-id=\"' +\n              row.id +\n              '\" class=\"is-rows-el quick-btn\">Button</button>'\n            );\n          },\n        },\n      ],\n      rows: [],\n      totalRecordCount: 0,\n      sortable: {\n        order: \"id\",\n        sort: \"asc\",\n      },\n      messages: {\n        pagingInfo: \"Showing {0}-{1} of {2}\",\n        pageSizeChangeLabel: \"Row count:\",\n        gotoPageLabel: \"Go to page:\",\n        noDataAvailable: \"No data\",\n      },\n    });\n    /**\n     * Search Event\n     */\n    const doSearch = (offset, limit, order, sort) => {\n      table.isLoading = true;\n      setTimeout(() => {\n        table.isReSearch = offset == undefined ? true : false;\n        if (offset >= 10 || limit >= 20) {\n          limit = 20;\n        }\n        if (sort == \"asc\") {\n          table.rows = sampleData1(offset, limit);\n        } else {\n          table.rows = sampleData2(offset, limit);\n        }\n        table.totalRecordCount = 20;\n        table.sortable.order = order;\n        table.sortable.sort = sort;\n      }, 600);\n    };\n    /**\n     * Loading finish event\n     */\n    const tableLoadingFinish = (elements) => {\n      table.isLoading = false;\n      Array.prototype.forEach.call(elements, function (element) {\n        if (element.classList.contains(\"name-btn\")) {\n          element.addEventListener(\"click\", function () {\n            console.log(this.dataset.id + \" name-btn click!!\");\n          });\n        }\n        if (element.classList.contains(\"quick-btn\")) {\n          element.addEventListener(\"click\", function () {\n            console.log(this.dataset.id + \" quick-btn click!!\");\n          });\n        }\n      });\n    };\n    /**\n     * Row checked event\n     */\n    const updateCheckedRows = (rowsKey) => {\n      console.log(rowsKey);\n    };\n    // First get data\n    doSearch(0, 10, 'id', 'asc');\n    return {\n      table,\n      doSearch,\n      tableLoadingFinish,\n      updateCheckedRows,\n    };\n  },\n});\n</script>\n"]}]}