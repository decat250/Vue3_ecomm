import { PropType } from 'vue';
export interface VOverflowInst {
    sync: () => void;
}
declare const _default: import("vue").DefineComponent<{
    getCounter: PropType<() => HTMLElement | null>;
    getTail: PropType<() => HTMLElement | null>;
    updateCounter: PropType<(count: number) => void>;
    onUpdateOverflow: PropType<(overflow: boolean) => void>;
}, {
    selfRef: import("vue").Ref<HTMLElement | null>;
    counterRef: import("vue").Ref<HTMLElement | null>;
    sync: () => void;
}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, Record<string, any>, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<{
    getCounter?: unknown;
    getTail?: unknown;
    updateCounter?: unknown;
    onUpdateOverflow?: unknown;
} & {} & {
    getCounter?: (() => HTMLElement | null) | undefined;
    getTail?: (() => HTMLElement | null) | undefined;
    updateCounter?: ((count: number) => void) | undefined;
    onUpdateOverflow?: ((overflow: boolean) => void) | undefined;
}>, {}>;
export default _default;
